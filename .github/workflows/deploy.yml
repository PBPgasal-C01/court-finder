name: Push to PWS

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Push to PWS (main -> master)
        env:
          PWS_URL: ${{ secrets.PWS_URL }}
          PWS_USERNAME: ${{ secrets.PWS_USERNAME }}
          PWS_TOKEN: ${{ secrets.PWS_TOKEN }}
          PWS_PASSWORD: ${{ secrets.PWS_PASSWORD }}
        run: |
          set -eo pipefail
          # Ensure we only run from main for safety
          echo "GITHUB_REF_NAME=$GITHUB_REF_NAME"
          if [[ "${GITHUB_REF_NAME}" != "main" ]]; then
            echo "This workflow only pushes from 'main'. Current: ${GITHUB_REF_NAME}"
            exit 0
          fi

          if [[ -z "$PWS_URL" ]]; then
            echo "PWS_URL secret is not set. Please add it in GitHub Secrets."
            exit 1
          fi

          # Build HTTP Basic Authorization header without exposing credentials in logs
          CRED=""
          if [[ -n "$PWS_TOKEN" && -n "$PWS_USERNAME" ]]; then
            CRED="$PWS_USERNAME:$PWS_TOKEN"
          elif [[ -n "$PWS_PASSWORD" && -n "$PWS_USERNAME" ]]; then
            CRED="$PWS_USERNAME:$PWS_PASSWORD"
          else
            echo "PWS_USERNAME and PWS_TOKEN (or PWS_PASSWORD) secrets are required."
            exit 1
          fi

          # base64 encode credentials; avoid newlines (-w 0 on GNU, fallback to default on macOS image not needed here)
          AUTH_BASE64=$(printf '%s' "$CRED" | base64 -w 0 2>/dev/null || printf '%s' "$CRED" | base64)
          AUTH_HEADER="Authorization: Basic $AUTH_BASE64"

          echo "Pushing: main -> master (remote: $PWS_URL)"
          # Use extra HTTP header for auth; no need to embed creds in URL
          push_output=$(git -c http.extraHeader="$AUTH_HEADER" push "$PWS_URL" main:master 2>&1) || {
            echo "Push failed with output: $push_output"
            echo "Error: Unable to push changes. Please check the error message above and resolve any conflicts manually."
            exit 1
          }
          echo "Push successful with output: $push_output"
